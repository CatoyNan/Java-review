<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/tx    
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd"> 
	

	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->  
	<!-- 这里支持多种寻址方式：classpath和file  推荐使用file的方式引入，这样可以将配置和代码分离 
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
           <list>  
              <value>classpath:META-INF/config/appconfig.properties</value>  
              <value>classpath:META-INF/config/redis.properties</value>
              <value>classpath:META-INF/config/database.properties</value>  
              <value>file:/opt/demo/config/demo-mq.properties</value>  
              <value>file:/opt/demo/config/demo-remote.properties</value>  
            </list>  
        </property>  
    </bean>  
	   --> 

	<!-- 定义事务 
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource" />
	</bean>
	-->
	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  
	<tx:annotation-driven transaction-manager="txManager" />
	-->
	
	
	<!--Druid提供了Spring和Jdbc的关联监控。注意:dubbox消费端无法监控到jdbc,只能监控到spring接口调用
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	
	<aop:config>
		<aop:pointcut id="druidPointCuts" expression="execution(* com.myron.ims.service.*.*(..))"/>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druidPointCuts" />
	</aop:config> 
	-->
	
	<bean id="taskExecutor"   
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
		<property name="corePoolSize" value="5" />  
		<property name="maxPoolSize" value="10" />  
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />  
	</bean>  
	
	<!-- 扫描切点类组件 -->
	<context:component-scan base-package="com.myron.ims.aop" />
	<context:component-scan base-package="com.myron.ims.service" />
	<context:component-scan base-package="com.myron.ims.dao"/> 
	
	<!-- spring-mybatis 
	<import resource="classpath:META-INF/config/spring/spring-mybatis.xml"/>
	-->
	
	<!-- shiro权限配置 
	<import resource="classpath:META-INF/config/spring/spring-shiro.xml"/>
	-->
	
	<!-- spring 缓存配置/shiro权限缓存 
	<import resource="classpath:META-INF/config/spring/spring-context-cache.xml"/>
	-->
	
	<!-- redis连接配置
	<import resource="classpath*:META-INF/config/spring/spring-redis.xml"/>
	--> 
	
	<!-- 分布式事务配置
	<import resource="classpath:META-INF/config/spring/spring-transaction.xml"/>
	--> 
	
	
	
</beans>